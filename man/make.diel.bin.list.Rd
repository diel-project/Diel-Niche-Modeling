% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make.diel.bin.list.R
\name{make.diel.bin.list}
\alias{make.diel.bin.list}
\title{Create a List of Diel Bin Expressions Based on Solar Transitions}
\usage{
make.diel.bin.list(
  day = NULL,
  night = NULL,
  dawn = NULL,
  dusk = NULL,
  twilight = TRUE,
  plot.bins = TRUE,
  date = "2020-03-12",
  lat = 41.8781,
  lon = -87.6298,
  tz = "US/Central"
)
}
\arguments{
\item{day}{A character string representing the logical expression for the "day" period
using sunlight transition times (e.g., \code{"x >= sunriseEnd & x < sunset"}). Default is \code{NULL}.
See details for more information.}

\item{night}{A character string representing the logical expression for the "night" period.
Default is \code{NULL}. See details for more information.}

\item{dawn}{A character string representing the logical expression for the "dawn" period.
Only used if \code{twilight = FALSE}. See details for more information.}

\item{dusk}{A character string representing the logical expression for the "dusk" period.
Only used if \code{twilight = FALSE}. See details for more information.}

\item{twilight}{Logical; if \code{TRUE}, defines a combined "twilight" bin using default
rules inferred from the difference between day and night. If \code{FALSE}, expects
separate "dawn" and "dusk" periods. Default is \code{TRUE}. If \code{TRUE} and the
user is including their own equality statements, then only \code{day} and \code{night}
should be defined (\code{twilight} is inferred as the remainder of time).}

\item{plot.bins}{Logical; if \code{TRUE}, produces a diagnostic plot showing how seconds
over a 24-hour period are categorized into diel bins. Default is \code{TRUE}.}

\item{date}{Character; date string in \code{"YYYY-MM-DD"} or \code{"YYYY/MM/DD"}format for which to test
solar transitions provided by the user. Default is \code{"2020-03-12"}.}

\item{lat}{Numeric; latitude of the location. Default is \code{41.8781}. Used to test
solar transitions provided by the user.}

\item{lon}{Numeric; longitude of the location. Default is \code{-87.6298}. Used to test
solar transitions provided by the user.}

\item{tz}{Character string specifying the time zone (e.g., \code{"US/Central"}). Default is \code{"US/Central"}.
to test solar transitions provided by the user.}
}
\value{
A named list of character strings representing logical expressions that define
  each diel period. The object is assigned the S3 class \code{"diel.bin.list"}.
}
\description{
This function generates a named list of logical expressions that define diel periods
(e.g., day, night, dawn, dusk) based on sunlight transition times computed from a given
location, date, and time zone. It can either use default definitions or allow the user to
define their own logical expressions. It validates those expressions against known solar
event names, checks for logical consistency, and optionally visualizes the resulting diel bins.
}
\details{
If no expressions are provided for \code{day}, \code{night}, \code{dawn}, or \code{dusk},
the function uses default logic based on common sun transition events. The expressions
must refer to column names returned by \code{suncalc::getSunlightTimes()}, such as
\code{"sunriseEnd"}, \code{"sunset"}, \code{"night"}, etc. 

If \code{twilight = TRUE}, the default \code{diel.bin.list} is:
\preformatted{
    list(
      night = "x <= nightEnd | x > night",
      day   = "x >= sunriseEnd & x < sunset"
    )
   }

If \code{twilight = FALSE}, the default \code{diel.bin.list} is:
\preformatted{
     list(
      night = "x <= nightEnd | x > night",
      dawn  = "x > nightEnd & x < sunriseEnd",
      day   = "x >= sunriseEnd & x < sunset"
    )
 }

The function verifies that all referenced transition variables exist and that the logic
results in valid, non-overlapping diel bins over a 24-hour period. If twilight is enabled,
the "twilight" bin is inferred from the gaps between night and day.

## Tips for Constructing Expressions

- Expressions must compare a vector of POSIXct datetimes (\code{x}) to solar event times.
  For example: \code{"x >= sunriseEnd & x < sunset"}. The expressions must use
  the variable \code{x} to denote the POSIXct datetimes.

- All expressions must evaluate to logical vectors and refer only to solar transitions
  available from \code{suncalc::getSunlightTimes()} (e.g., \code{"night"}, \code{"sunset"}, etc.).

- Each second of the day must fall into exactly one diel bin. Overlap between expressions
  is not allowed and will result in an error.

- **Avoid using \code{>=} or \code{<=} on the same transition time across multiple bins.**
  For example, if you define:
  \preformatted{
    dawn = "x >= nightEnd & x <= sunriseEnd"
    day  = "x >= sunriseEnd & x < sunset"
  }
  Then \code{x == sunriseEnd} would match both expressions, leading to overlap.
  Instead, split the equality cleanly:
  \preformatted{
    dawn = "x >= nightEnd & x < sunriseEnd"
    day  = "x >= sunriseEnd & x < sunset"
  }

- It's generally safest to use \code{>=} on the left-hand side and \code{<} on the right-hand side
  for all expressions. This ensures that adjacent bins are mutually exclusive and collectively exhaustive.

- If \code{twilight = TRUE}, you must only define two bins (typically \code{day} and \code{night}).
  The \code{twilight} bin will be inferred automatically from the periods between \code{nightEnd}
  and \code{sunriseEnd}, and between \code{sunset} and \code{night}.

- If \code{twilight = FALSE}, you must define three bins (e.g., \code{day}, \code{night}, and either
  \code{dawn} or \code{dusk}) using explicit expressions. Note that when \code{twilight = FALSE} you
  likely will not need \code{>=} or \code{<=} in one of the three defined bins. This is because
  you are defining diel bins that are adjacent to one another.

The function will raise an error if:
- Any expressions reference unavailable solar transitions.
- Bins overlap (i.e., a time is assigned to more than one bin).
- Bins are discontinuous or missing (e.g., some seconds remain unassigned).
}
\examples{
# Use default twilight bin definition
diel_bins <- make.diel.bin.list(
  twilight = TRUE,
  plot.bins = FALSE
)

# Use custom definitions for dawn and dusk
diel_bins <- make.diel.bin.list(
  day = "x >= sunriseEnd & x < sunset",
  night = "x < nightEnd | x >= night",
  dawn = "x >= nightEnd & x < sunriseEnd",
  twilight = FALSE,
  plot.bins = FALSE
)
}
\seealso{
[suncalc::getSunlightTimes()] to get a list of the available sun times.
}
\author{
Mason Fidino
}
