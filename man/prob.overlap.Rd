% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prob.Overlap.r
\name{prob.overlap}
\alias{prob.overlap}
\title{Kernel Overlap density integration}
\usage{
prob.overlap(densityplot, dawn = c(6, 7), dusk = c(17, 18))
}
\arguments{
\item{densityplot}{a densityPlot object from package overlap or a fitact object from the package activity. See details for
additional information.}

\item{dawn}{beginning and end numeric (0-24) times for dawn. This is in
proportional hours such that 12.5 would be 12:30. See details for additional
information.}

\item{dusk}{beginning and end numeric (0-24) times for dusk. This is in
proportional hours such that 12.5 would be 12:30. See details for additional
information.}
}
\value{
A matrix of three probabilities.
}
\description{
Integrate kernel density to derive probability of twilight, daytime, nighttime
}
\details{
When creating the density plot from overlap, it is important to increase the \code{n.grid}
argument, because to this function integrates the area under the curve to
compute the associated probabilities. We suggest to start setting \code{n.grid}
 in \code{overlap::densityPlot} to at least 10000, but you may be able to do
 less. Essentially, if the outputted sum is within about a thousandth from one
 (e.g., 0.999) then the output from this function can be used in 
 \code{\link{posthoc.niche}}. There is no control over the grid used from \code{activity::fitact}
 and thus there may be some error in that the three probabilities do not sum
 to one. A patch would be to equally add the missing probability amount to each
 of the three probabilities.
 
 To compute proportional hours, you will need to start with a time object.
 Changing that time to a numeric should convert it to
 seconds from midnight. Given that there are 86,400 seconds in a day, divide
 by that number and multiply by 24 to create the proportional hours. See examples
 for some code on how to do this.
 
 @examples
 data("posthoc.example")
 
 diel_probs <- prob.overlap(
   posthoc.example$tiger.kde,
   dawn = posthoc.example$dawn.range,
   dusk = posthoc.example$dusk.range
 )
}
